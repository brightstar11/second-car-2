# 配置端口
server.port=8888

# 自定义配置
# 网页标题
title=二手车后台
# 网页logo
logo=/favicon.ico
# 服务器错误的错误页
errorPage=error.html
# ajax请求是否返回错误详情,建议开发环境打开,生产环境关闭
ajaxReqReturnErrorMsg=true
# 非ajax请求,在errorPage是否包含错误详情,建议开发环境打开,生产环境关闭
reqReturnErrorMsg=true
# 登录页
loginPath=login


# 配置数据源
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/webcar
spring.datasource.username=root
spring.datasource.password=root

# 配置连接池
# 连接池启动的时候,创建的初始化连接数量 
spring.datasource.initialSize=5 
# 最小空闲连接,连接池中空闲的连接数,低于这个数量会创建新的连接
spring.datasource.minIdle=5
# 最大空闲连接,连接池中空闲的连接数,超过这个数量的连接会被释放
spring.datasource.maxIdle=60 
# 最大活动连接,连接池中可同时连接的最大的连接数
spring.datasource.maxActive=20 
# 获取连接的最大等待(等连接池释放)时间,单位是毫秒, 超过该事件会抛出异常
spring.datasource.maxWait=60000 
# 配置间隔多久才进行一次检测(检测需要关闭的空闲连接),单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000 
# 配置一个连接在池中最小生存的时间,单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000 
# Oracle请使用select 1 from dual  MySql使用  select 1
spring.datasource.validationQuery=SELECT '1' 
# 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
spring.datasource.testWhileIdle=true 
# 借出连接时不要测试,否则很影响性能
spring.datasource.testOnBorrow=false
# 归还连接时不要测试,否则很影响性能
spring.datasource.testOnReturn=false 
# 打开PSCache,并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true 
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20 
# 配置监控统计拦截的filters,去掉后监控界面sql无法统计,'wall'用于防火墙 
spring.datasource.filters=stat,wall,slf4j 
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录 
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 
 

# 配置mybatis的mapper文件
mybatis.mapper-locations: classpath:com/xh/mapper/xml/*.xml
mybatis.type-aliases-package: com.xh.entity


# 显示mybatis日志
# logging.level.com.xx.mapper=debug


# thymeleaf模板配置
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.freemarker.checkTemplateLocation=false
#配置静态资源
spring.resources.static-locations=classpath:/static,classpath:/templates


#配置邮箱
#spring.mail.password=//对于qq邮箱而言 密码指的就是发送方的授权码
#spring.mail.username=发送方QQ邮箱
spring.mail.host=smtp.qq.com
spring.mail.username=574704464@qq.com
spring.mail.password=xkzdqnapzdsbbebb  

spring.mail.default-encoding=UTF8

#是否用启用加密传送的协议验证项
#注意：在spring.mail.password处的值是需要在邮箱设置里面生成的授权码，这个不是真实的密码。
 